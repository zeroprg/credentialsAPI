#%RAML 1.0
title: CredentialsAPI
description: 'This is CredentialsAPI which follow ext standard specification: https://www.w3.org/TR/credential-management/'
version: 0.0.1
baseUri: https://mocksvc.mulesoft.com/mocks/8310dcc4-51a7-4b34-b55a-4ddd7d03d7e6/credentialsAPI # baseUri: 'http://credentialsapi.us-east-2.elasticbeanstalk.com/CredentialsAPI'
documentation:
  - title: 'this documentation title'
    content: 'Documenation content'



types:
  password-strength:
    description: 'This is password strength DataType'
    type: object
    properties: 
      strength: integer

    
/signin:
  post:
    headers:
      securetoken:
        example: '3StringcJc6wPpGz1idWPq1ohJDvsKr3RZNgkzpfAuj'
        type: string
    description: 'Secured token which stored by browser, used to authenticate in default mode. By filling in the form and pressing the "Sign In" button at the sign-in page (/signin), an AJAX GET is sent to this endpoint. You will then be redirected to the main page (/main) if the request is successful or shown an error message if it fails.'
    body: 
       application/json:
    
    responses:
      '200': 
        description: 'The server successfully processed the request.'
        body: 
          text/plain:
            type: string  
      '401': 
        description: 'The user does not have the necessary credentials.'  
        body: 
          text/plain:
            type: string  
      '400': 
        description: 'Bad Request'
        body: 
          text/plain:
            type: string  
      '500': 
        description: 'Internal Server exception with custom message'
        body: 
          text/plain:
            type: string  

/signout:
  post:
    headers:
      securetoken:
        example: '1rruwyriwu24645647fghfghe22'
        type: string
    description: 'Secured token which stored by browser, used to authenticate in default mode. By tapping on the "Sign Out" button at the main page, an AJAX request is sent to this endpoint, sign out happened, then redirected to /.'
    body: 
       application/json:
    
    
    responses:
      '200': 
        description: 'The server successfully processed the request.'
        body: 
          text/plain:
            type: string  
      '400': 
        description: 'Bad Request'
        body: 
          text/plain:
            type: string
      '401': 
        description: 'The user does not have the necessary credentials.'
        body: 
          text/plain:
            type: string

      '500': 
        description: 'Internal Server exception with custom message'
        body: 
          text/plain:
            type: string


/unregister:
  post:
    headers:
      Authorization:
        example: 'user@gmail.com:password'
        type: string
      securetoken:
        example: 'StringcJc6wPpGz1idWPq1ohJDvsKr3RZNgkzpfAuj'
        type: string
    description: 'By tapping on the "Unregister" button at the main page, an AJAX request is sent to this endpoint, unregister required userId and password in Authorzation parameter . Ideally redirected to /.'
    body: 
       application/json:

    responses:
      '200': 
        description: 'The server successfully processed the request.'
        body: 
          text/plain:
            type: string

      '401': 
        description: 'The user does not have the necessary credentials.'  
        body: 
          text/plain:
            type: string

      '400': 
        description: 'Bad Request'
        body: 
          text/plain:
            type: string

      '500': 
        description: 'Internal Server exception with custom message'
        body: 
          text/plain:
            type: string
        
/update-password:
  post:
    headers:
      Authorization:
        example: 'user@gmail.com:password'
        type: string
      newpassword:
        example: 'newpassword'
        type: string
      securetoken:
        example: 'StringcJc6wPpGz1idWPq1ohJDvsKr3RZNgkzpfAuj'
        type: string        
    description: 'By tapping on the "Update" button at the main page, an AJAX request is sent to this endpoint with Base64 new password and "userId:password" Bae64 encoded pair . Ideally redirected to /.'
    body: 
      application/json:
    responses:
      '200':
        body: 
          application/json:
            example: |
              {"message" : "password updated"} 
        description: 'The server successfully processed the request.'
      '401':
        body: 
          text/plain:
            type: string
        description: 'The user does not have the necessary credentials.'  
      '400':
        body: 
          text/plain:
            type: string
        description: 'Bad Request'
      '500':
        body: 
          text/plain:
            type: string
        description: 'Internal Server exception with custom message'

/reset-password:
  post:
    headers:
      securetoken:
        example: 'StringcJc6wPpGz1idWPq1ohJDvsKr3RZNgkzpfAuj'
        type: string
    description: 'By tapping on the "Reset" button at the main page, an AJAX request is sent to this endpoint with secureToken. After eMail end bc with instrutions how to update password'
    body: 
      application/json:
    responses:
      '200':
        body: 
          text/plain:
            type: string
        description: 'The server successfully processed the request.'
      '401':
        body: 
          text/plain:
            type: string
        description: 'The user does not have the necessary credentials.'  
      '400': 
        description: 'Bad Request'
        body: 
          text/plain:
            type: string

      '500': 
        description: 'Internal Server exception with custom message'
        body: 
          text/plain:
            type: string

/send-validation-email:
  post:
    headers:
      email:
        example: 'user@gmail.com'
        type: string
    description: 'Initiate password reset flow initiated by user because user forgot password. (eMail passed in header).It will send eMail validation which will have link to update password endpoint.'
    responses:
      '200': 
        description: 'The server successfully processed the request.'
        body: 
          text/plain:
            type: string

      '401': 
        description: 'The user does not have the                  body: 
          text/plain:
            type: string
necessary credentials.'  

      '400': 
        description: 'Bad Request'
        body: 
          text/plain:
            type: string
 
      '500': 
        description: 'Internal Server exception with custom message'
        body: 
          text/plain:
            type: string


/validate-by-email:
  get:
    queryParameters: 
      securetoken:
        example: 'StringcJc6wPpGz1idWPq1ohJDvsKr3RZNgkzpfAuj'
        type: string
    description: 'By clicking on the "Email validation" link in  Email , an GET request is sent to this endpoint . Ideally redirected to /update-pasword UI.'
    body: 
       application/json:
    

    responses:
      '200': 
        description: 'The server successfully processed the request.'
        body: 
          text/plain:
            type: string

      '401': 
        description: 'The user does not have the necessary credentials.'  
        body: 
          text/plain:
            type: string

      '400': 
        description: 'Bad Request'
        body: 
          text/plain:
            type: string

      '500': 
        description: 'Internal Server exception with custom message'
        body: 
          text/plain:
            type: string


/password-strength:
  get:
    headers:
      password:
        example: 'Abracadabra'
        description: 'How strong passord is'
        type: string
    description: 'By tapping on the "Password" field at the main page, an AJAX request is sent to this endpoint to check how strong the password is. Result is itnteger from 0 to 10 /. Password send in Base64 encoding'
    body: 
       application/json:
    
    responses:
      '200':
         body: 
          application/json:
            description: 'Return password strength'
            type: password-strength
            example: 
              strength: 5
         description: 'The server successfully processed the request. Return password strength in body as json' 

      '401': 
        description: 'The user does not have the necessary credentials.'
        body: 
          text/plain:
            type: string
      '500': 
        description: 'Internal Server exception with custom message'
        body: 
          text/plain:
            type: string
   
/auth-password:
  post:
    headers:
      Authorization:
        example: 'user@gmail.com:password'
        type: string
    description: 'By filling the form and pressing a "Login" button at the top page (/), the form will send an AJAX POST to this endpoint. Based 64 encoded username:password key pair wil be send "Authorization" header. You will be then redirected to the main page (/main) if the request is successful or will show an error message if it fails.'
    body: 
       application/json:
    

    responses:
      '200':
        body: 
          text/plain:
            type: string
        description: 'The server successfully processed the request. Return secureToken in body as plain text'
      '401': 
        description: 'The user does not have the necessary credentials.' 
        body: 
          text/plain:
            type: string

      '400': 
        description: 'Bad Request'
        body: 
          text/plain:
            type: string

      '500': 
        description: 'Internal Server exception with custom message'
        body: 
          text/plain:
            type: string
    
/register:
  post:
    headers:
      Authorization:
        example: 'user@gmail.com:password'
    description: 'By filling the form and pressing a "Regiter" button at the top page (/), the form will send an AJAX POST to this endpoint. You will be then redirected to the main page (/main) if the request is successful or will show an error message if it fails. Send Base64 encoded user:password pair'
    body: 
       application/json:
    

    responses:
      '200':
        body: 
          text/plain:
            type: string
        description: 'The server successfully processed the request. Return secureToken in body as plain text'
      '401': 
        description: 'The user does not have the necessary credentials.'  
        body: 
          text/plain:
            type: string

      '400': 
        description: 'Bad Request'
        body: 
          text/plain:
            type: string

      '500': 
        description: 'Internal Server exception with custom message'
        body: 
          text/plain:
            type: string

/register-with-recaptcha:
  post:
    headers:
      Authorization:
        example: 'user@gmail.com:password'
      g-recaptcha-response:
        example: 'sjdfn4r4r234'
      ip-address:
        example: '172.0.0.0'
    description: 'Register with Recaptcha validation'
    body: 
       application/json:
    
    responses:
      '200':
        body: 
          text/plain:
            type: string
        description: 'The server successfully processed the request. Return secureToken in body as plain text'
      '401': 
        description: 'The user does not have the necessary credentials.'  
        body: 
          text/plain:
            type: string

      '400': 
        description: 'Bad Request'
        body: 
          text/plain:
            type: string

      '417':
        description: 'Bad Captcha'
        body: 
          text/plain:
            type: string

      '500': 
        description: 'Internal Server exception with custom message'
        body: 
          text/plain:
            type: string

/recaptcha:
  post:
    headers:
      g-recaptcha-response:
        example: 'sjdfn4r4r234'
      ip-address:
        example: '172.0.0.0'
    description: 'Recaptcha validation'
    body: 
       application/json:
    
    responses:
      '200':
        body: 
          text/plain:
            type: string
        description: 'The same as register with recaptcha except Authoorization token, return Ok 200 status code if successed. Does oly recatcha validation'
      '401': 
        description: 'The user does not have the necessary credentials.'  
        body: 
          text/plain:
            type: string

      '400': 
        description: 'Bad Request'
        body: 
          text/plain:
            type: string

      '417':
        description: 'Bad Captcha'
        body: 
          text/plain:
            type: string

      '500': 
        description: 'Internal Server exception with custom message'
        body: 
          text/plain:
            type: string

